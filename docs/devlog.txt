r3d3
    khyberS - Khyber Sen
    adamA - Adam Abbas
    naotakaK - Naotaka Kinoshita
    vivienL - Vivien Lee

        ,----,
      ,/   .`|
    ,`   .'  :                       ,---,        ,---,.                           ,-.
  ;    ;     /                     .'  .' `\    ,'  .'  \                      ,--/ /|
.'___,/    ,'                    ,---.'     \ ,---.' .' |   ,---.     ,---.  ,--. :/ |
|    :     |           ,--,  ,--,|   |  .`\  ||   |  |: |  '   ,'\   '   ,'\ :  : ' /
;    |.';  ;   ,---.   |'. \/ .`|:   : |  '  |:   :  :  / /   /   | /   /   ||  '  /
`----'  |  |  /     \  '  \/  / ;|   ' '  ;  ::   |    ; .   ; ,. :.   ; ,. :'  |  :
    '   :  ; /    /  |  \  \.' / '   | ;  .  ||   :     \'   | |: :'   | |: :|  |   \
    |   |  '.    ' / |   \  ;  ; |   | :  |  '|   |   . |'   | .; :'   | .; :'  : |. \
    '   :  |'   ;   /|  / \  \  \'   : | /  ; '   :  '; ||   :    ||   :    ||  | ' \ \
    ;   |.' '   |  / |./__;   ;  \   | '` ,/  |   |  | ;  \   \  /  \   \  / '  : |--'
    '---'   |   :    ||   :/\  \ ;   :  .'    |   :   /    `----'    `----'  ;  |,'
             \   \  / `---'  `--`|   ,.'      |   | ,'                       '--'
              `----'             '---'        `----'

============================================================
khyberS -- 2018-05-08 13:18:00

Setup up repo for Flask and TypeScript + Webpack
and added old util files for both.

============================================================
khyberS -- 2018-05-17 12:49:00

Added /favicon.ico route in app.py.

Tested Express server for comparison.

Wrote Isbn class for parsing ISBNs
and IsbnBook for extra ISBN metadata fetched from Google (using node-isbn).

Started TextBook and User classes/interfaces.

============================================================
khyberS -- 2018-05-17 13:09:00

Changed directory structure for WSGI and Apache2.

============================================================
khyberS -- 2018-05-18 0:42:00

Setup everything for initial deployment,
including an install script (install.sh).

All the other necessary .conf, .wsgi, etc. files are there now, too.

Will test on VM now.

============================================================
khyberS -- 2018-05-20 23:39:00

Flask now runs through Apache2 correctly.

It uses some form of multithreading and/or multiprocessing
that has a low default limit
(10 blocking calls are not evaluated at about the same time, but in batches).

============================================================
khyberS -- 2018-05-21 21:41:00

Began setting up database models using peewee:
    User, Book, IsbnBook, and Transaction.

============================================================
abbasA -- 2018-05-22 13:18:00

Began the frontend, base and homepage

============================================================
khyberS -- 2018-05-22 13:19:00

Using flask_login to manage authentication.
Added /login REST route and User.login().

============================================================
naotakaK -- 2018-05-22 15:25:00

Implemented clean function to convert ISBN 10 to ISBN 13

============================================================
khyberS -- 2018-05-24 08:33:00

Setup basic react router and it works.  
Working on logging in now.

Also moved clean_isbn() to correct location, not clean_barcode().

============================================================
khyberS -- 2018-05-24 13:01:00

Fixed circular importing (had to put all model classes in same module).
Now it runs correctly from Flask (through Apache not tested yet).

============================================================
abbasA -- 2018-05-25 13:09:00

Worked on login and homepage and fixed the navbar. Raised an issue on an extra home.html with seemingly valuable content in it.

============================================================
khyberS -- 2018-05-26 22:47:00

Setup the React front-end with separate ViewRouters for logged in and logged out states.

Working on integrating the Login, Logout, and CreateAccount LoginComponents
with the Flask server right now.

============================================================
khyberS -- 2018-05-27 18:27:00

Fixed the login mechanism w.r.t to cookies.
    Needed to set {credentials: "include"} in Fetch call to send all cookies.
    Needed to fix User.load() to set User.is_authenticated = True.
    Needed to set login_manager.user_callback = User.load manually
        instead of using decorator, since class methods messed it up.

Wrote bindProps to bind props to a ComponentClass,
like how Function.bind works with functions.
It does this by wrapping the ComponentClass in a new ComponentClass
and then copying all the properties of the original to the wrapper.

============================================================
khyberS -- 2018-05-27 18:27:00

LoginComponents now display messages themselves instead of in LoginManager.

Inputs now takes an onEnter prop that is linked to
the input's onkeyup event when Enter is pressed.

============================================================
khyberS -- 2018-05-29 03:19:00

Tldr: I need to buy a domain name for SSL certificates for HTTPS for subtle.crypto.

Tried to run all of these changes on Apache on the DO Droplet,
but ran into major problems:

    Fixed the problems below first.

    window.subtle.crypto is not available in insecure contexts,
    meaning on non-localhost HTTP sites, it's not available.
    We're using subtle.crypto to hash password on the client for extra security,
    so our website doesn't work if subtle.crypto isn't available.

    HTTPS is necessary for subtle.crypto,
    so I set up template.conf to redirect the <VirtualHost *:80> to <VirtualHost *:443> for HTTPS
    and set up <VirtualHost *:443> for HTTPS by setting:
        WSGIPassAuthorization On
        SSLEngine on

    SSLEngine requires mod_ssl (pre-installed on Ubuntu), so I added a2enmod ssl to install.sh.
    However, SSL requires SSL certificates.
    But to get SSL certificates, I need a domain name, which I presume I have to buy.
    So until I get a domain name and register it, our website won't run on non-localhost.

Overrode TexDBookDatabase.connect()
to always pass reuse_if_open=True
so that Apache doesn't erroneously open the database multiple times.

Added passlib dependency.

Unfinished changes:
    Started standardizing our REST APIs.
    Wrote @rest_api_route() that decorates a method returning JSON or an error message.
    Wrote the api singleton in TS that calls all of the REST APIs.
        Many of these are refactored from the extended LoginComponents.
    Currently working on /uploadBooks on both front and backend.
        Need to finish AllIsbns/Books singleton first,
        which keeps track of all the books and
        makes metadata fetches before syncing with the server.

============================================================
khyberS -- 2018-05-30 08:31:00

Wrote MultiBiMap<K, V> for use in Books.
Acts like a function, mapping a domain (keys) onto a range (values),
such that multiple keys can map to the same value but not vice versa.
Used to map barcodes to isbns.

Modified SHA in hash.ts to not hash when crypto.subtle is not available
instead of just failing (throwing an exception).

Trying to revert to HTTP on Apache for now so we can demo something.
Client-side hashing will be disabled for now.

============================================================
naotakaK -- 2018-05-30 15:34:00

Wrote searchISBN function to return data about given ISBN.

============================================================
khyberS -- 2018-06-03 00:53:00

Created fancy input form for uploading books.

    There are indented, collapsible, hierarchical sections
    for inputting the department, ISBN, and barcode.

    You can add new input fields, for any of the three
    by clicking "New <field>" and optionally specifying an amount.

    You can delete input fields by clicking on the X on the right.

    When you add or delete input fields,
    it automatically scrolls the button into view again
    so you can keep clicking on it easily.

    If you click on the name of the input field,
    it will highlight and then collapse (or uncollapse) that entire section.

    When you enter an ISBN, it is immediately validated.
    If wrong, it tells you invalid ISBN.
    If right, it queries the Google Books API to get an image of the actual book,
    which is placed next to the ISBN entered.

    The ISBN and barcode input fields only allow numbers.
    Any other characters are immediately deleted.

This is done using the InputLists Component by extending it.
You can call super with all the options for the InputLists,
including the sets of the names of the hierarchy of input fields,
with an optional onKeyUp() function that takes the current value of the input
and returns (optionally) two ReactNodes to render before and after the input,
like how the "Invalid ISBN" and picture of the book show up.
Thus, it's extremely easy to extend to other hierarchical input lists.

============================================================
khyberS -- 2018-06-03 00:53:00

Integrated Naotaka's searchISBN() as api.resolveIsbn().

============================================================
khyberS -- 2018-06-04 02:53:00

Added "Download as JSON" and "Download as CSV" buttons to InputLists.
Having invalid inputs anywhere should disable these buttons,
but keeping track of all the invalid inputs and
when they invalidate or validate the buttons is not simple, so I'll do it later.

Created all the extra models in models.py necessary to represent each IsbnBook
using the data received from the Google Books API.

Fixed the /allIsbns and /ownBooks APIs.

Working on /uploadBooks, api.uploadBooks(), and allBooks right now.

============================================================
khyberS -- 2018-06-04 13:18:00

Got api.uploadBooks() working.
It was working before, but I needed to call allBooks.assignBarcode()
in InputBooksComponent.submitInput() before calling allBooks.sync().

Fixed /uploadBooks, which uses @rest_api add_book() to add each book itself.
Testing it now.

============================================================